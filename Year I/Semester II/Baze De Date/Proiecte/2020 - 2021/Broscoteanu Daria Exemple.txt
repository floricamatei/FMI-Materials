
--afisati numele facultatilor care au grupe care desfasoara cursuri in Amfiteatrul Haret

SELECT UNIQUE CONCAT(CONCAT('Facultatea ',f.denumire),' are si cursuri in Amfiteatrul Haret') as "Rezultat"
FROM facultate f,sectie s, serie ser, grupa g, orar o, sala sal
where f.cod_facultate = s.cod_facultate and s.cod_sectie = ser.cod_sectie and ser.cod_serie = g.cod_serie 
and g.cod_grupa = o.cod_grupa and o.cod_sala = sal.cod_sala and UPPER(sal.denumire) like UPPER('Amfiteatrul Haret');

-------------------------------------------------------------------------------------------------

-- afisati denumirea asociatiilor studentesti si numele facultatii de care apartin pentru cele care au
--aparut inainte de 01-04-2006 si care contin litera i in denumire

SELECT a.denumire as "Nume Asociatie"
FROM asociatie a JOIN facultate USING(cod_facultate)
WHERE a.data_infiintarii>TO_DATE('01-04-2006','dd-mm-yyyy') and a.denumire like '%I%';



-------------------------------------------------------------------------------------------------
--afisati nume si emailul profesorilor care au salariu mai mare decat salariul mediu si
-- care lucreaza la facultati al caror cod postal incepe cu '010'

SELECT CONCAT(CONCAT(p.nume,' '),p.prenume) as "Profesor", p.mail as "Mail"
from profesor p
where p.cod_profesor in (select cod_profesor
                        from contract
                        where salariu > (select avg(salariu)
                                        from contract))
        and p.cod_profesor in(select cod_profesor 
                                from contract 
                                where cod_facultate in (select cod_facultate
                                                        from facultate
                                                        where cod_postal LIKE '010%'
                                                        )
                            );


-------------------------------------------------------------------------------------------------
--pentru fiecare profesor sa se afiseze ce salariu obtin pentru fiecare dintre facultatile cu
-- codurile de la 1 pana la 5 si salariu total obtinut de un profesor, se eticheteaza coloanele corespunzator.


SELECT cod_profesor, SUM(DECODE(cod_facultate, 1, salariu)) Facultate1,
 SUM(DECODE(cod_facultate, 2, salariu)) Facultate2,
 SUM(DECODE(cod_facultate, 3, salariu)) Facultate3,
 SUM(DECODE(cod_facultate, 4, salariu)) Facultate4,
 SUM(DECODE(cod_facultate, 5, salariu)) Facultate5,
 SUM(salariu) as Total
FROM contract
GROUP BY cod_profesor;

-------------------------------------------------------------------------------------------------
-- afisati numele, prenumele data inscrierii,codul asociatiei la care esti voluntar sau un mesaj
-- daca nu este pentru stundetii care s-au inscris in ultimelr 15 luni la facultate

select s.nume as Nume, s.prenume as Prenume, i.data_inscrierii as Data, NVL2(to_char(s.cod_asociatie), to_char(s.cod_asociatie), 'Nu e voluntar') as "Voluntar" 
from student s, inscriere i
where s.cod_student = i.cod_student and MONTHS_BETWEEN(sysdate,i.data_inscrierii)<15
Order by s.nume;

-------------------------------------------------------------------------------------------------
-- afisati pentru fiecare student forma examenului si nota sub forma unui mesaj, utilizand case

SELECT s.nume, s.prenume, e.forma, c.denumire,
CASE
    WHEN p.nota >= 10 THEN 'Nota e maxima'
    WHEN p.nota >= 9 THEN 'Nota e peste 9'
    WHEN p.nota >= 8 THEN 'Nota e peste 8'
    WHEN p.nota >= 7 THEN 'Nota e peste 7'
    WHEN p.nota >= 6 THEN 'Nota e peste 6'
    WHEN p.nota >= 5 THEN 'Nota e peste 5'
    ELSE 'Este picat'
END AS Nota
FROM student s, promoveaza p, examen e, curs c
WHERE s.cod_student = p.cod_student and p.cod_examen = e.cod_examen and e.cod_curs = c.cod_curs
ORDER By s.nume, s.prenume, e.forma, c.denumire;

select * 
from promoveaza;

select *
from examen;

SELECT s.nume, s.prenume,e.forma
FROM student s, promoveaza p, examen e
WHERE s.cod_student = p.cod_student and e.cod_examen = e.cod_examen
ORDER By p.nota;
------------------------------------------------------------------------------------------------------------------------------------------------

UPDATE CONTRACT
SET salariu = salariu + 0.1*salariu
WHERE cod_profesor in (select cod_profesor
                        from profesor
                        where telefon LIKE '074%');
                        

UPDATE PROMOVEAZA
SET nota = nota + 0.5
WHERE nota < 8 and cod_student in (select cod_student
                        from student
                        where sex LIKE 'feminin');
                        

UPDATE PROMOVEAZA
SET nota = nota - 0.5
WHERE nota >9 and cod_student in (select cod_student
                        from student
                        where nationalitate LIKE 'roman');
                        
COMMIT;       

select *
from contract;
                    
----------------------------------------------------------------------------------------------------------------------------------------------------------


-- afisez pentru fiecare facultate care are salariu mediu mai mare decat 5200 de lei denumirea acesteia si
--codul profesorului care are salariul mai mare de 5200 de lei si salariul acestuia
with salariu as (select cod_facultate,avg(salariu) media, cod_profesor
                from contract 
                group by cod_facultate, cod_profesor
               having cod_facultate in (select cod_facultate
                                        from facultate) 
                    and cod_profesor in (select cod_profesor
                                         from profesor)
                )
select f.denumire as "Denumire facultate", cod_profesor as "Cod Profesor", salariu.media as "Salariu"
from salariu join  facultate f on (f.cod_facultate = salariu.cod_facultate)
where salariu.media > 5200
order by f.denumire;



--------------------------------------------------------------------------------------------------------------


-- sa se afiseze informatiile despre profesorii al caror salariu depaseste in cadrul unei facultati media colegilor sai,
--media salariilor si numarul de angajati de la acea facultate


select p.nume, p.prenume, p.mail, p.telefon, c.salariu, (select avg(salariu)
                                                        from contract
                                                        where cod_facultate = c.cod_facultate) as "Salariu Mediu",
                                                        (Select count(*)
                                                        from contract 
                                                        where f.cod_facultate = cod_facultate) as "Numar Angajati"
                                                                                        
from profesor p, contract c,  facultate f
where f.cod_facultate = c.cod_facultate and p.cod_profesor = c.cod_profesor
and salariu > (select avg(salariu)
               from contract
               where cod_facultate = c.cod_facultate);
               
               
--------------------------------------------------------------------------------------

--OUTER JOIN

--returnati pentru fiecare student  numele si prenumele, forma examenului si numele cursului
select s.nume||' '||s.prenume as Student, e.forma as Forma, c.denumire as Curs
from student s right outer join promoveaza p on (p.cod_student = s.cod_student) left outer join examen e 
on (p.cod_examen = e.cod_examen) full outer join curs c on (c.cod_curs = e.cod_curs)
order by s.nume;

--returnati numarul de cursuri desfasurate intr-o sala
select s.cod_sala,NVL(count(o.cod_sala),0) as "Numar cursuri"
from sala s left outer join orar o on (s.cod_sala=o.cod_sala)
group by s.cod_sala;

select s.cod_sala,NVL(numar,0) as "Numar cursuri"
from sala s left outer join (select count(*) numar ,cod_sala
from orar 
group by cod_sala)o on (s.cod_sala=o.cod_sala);


--------------------------------------------------------------------------------------------------------
--pentru arbore
select p.nume, p.prenume, c.salariu
from profesor p join contract c on (p.cod_profesor = c.cod_profesor)
where c.cod_facultate = 1 and c.salariu >= 5000 and data_inceput > to_date('01-08-2017','dd-mm-yyyy');


select p.nume, p.prenume, c.salariu
from profesor p join contract c on (p.cod_profesor = c.cod_profesor)
where c.cod_facultate in (select cod_facultate
                            from contract t
                            where t.cod_facultate = c.cod_facultate and t.cod_facultate = 1)
                         and  c.salariu in (select salariu
                                            from contract ct
                                            where ct.salariu >= 5000 and c.cod_profesor = ct.cod_profesor) 
                                            and data_inceput in (select data_inceput
                                                                from contract cc
                                                                where cc.data_inceput > to_date('01-08-2017','dd-mm-yyyy') and  c.cod_profesor = cc.cod_profesor)
                                                                ;
                
                



select p.nume, p.prenume, c.salariu
from (select salariu, cod_profesor 
        from contract
        where cod_facultate = 1 and salariu >= 5000 and data_inceput > to_date('01-08-2017','dd-mm-yyyy') ) c
join(select nume,prenume, cod_profesor
        from profesor ) p on (p.cod_profesor = c.cod_profesor);

-------------------------------------------------------------------------------------------------------
--DIVISION

--Sa se obtina profesorii care au ore cu grupe din seria 15.
SELECT *
FROM profesor  p
where not exists (
	select cod_grupa 
    from orar 
    where p.cod_profesor=cod_profesor
	minus
	select cod_grupa 
    from grupa
    where denumire like '15%' );
 
    
--returneaza toti studentii care au promovat examenul de la cursul cu codul 303


select *
from student s
where not exists (
	(select cod_examen 
    from promoveaza
    where s.cod_student=cod_student)
	minus
	(select cod_examen 
    from examen 
    where cod_curs= 303) );
    
    
-------------------------------------------------------------------------------------------------


