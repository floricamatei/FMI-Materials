--Tema : ex 5 lab 2 
select * from employees, dual where MOD( round(sysdate - hire_date), 7)=0;
--ex 6 lab 2
select employee_id, last_name, salary,round( salary *1.15,2) "Salariu nou",
round( salary *1.15/100 ,2)"Numar sute " from employees 
where mod(salary, 1000)!= 0;-- mai e si <>, ^=

--salary + salary*0.15 --> salary *1.15
--ex 7 lab 2
--converteste implicit data in char
select last_name "Nume angajat" , rpad(hire_date, 20, 'x' )"data angajarii" from employees where commission_pct is not null;

--ex 8  lab 2
select to_char(sysdate +30, 'month dd yyyy hh24:mi:ss') data from dual;

--ex 10 a
select to_char(sysdate +12/24, 'dd/mm hh24:mi:ss') data from dual;

--ex 10 b
--1 h ..60
--x h...5m -> x=5/60 in raport cu ora
--i raport cu ziua --> (5/60)/24
select to_char(sysdate +5/60/24, 'dd/mm hh24:mi:ss') data from dual;

--ex 13 
select last_name, nvl(to_char(commission_pct),'Fara comision') "Comision"  from employees; 
--ex 14
select last_name, salary, commission_pct from employees 
where nvl(salary+salary*commission_pct, salary) >10000;

select last_name, salary, commission_pct from employees 
where salary + salary  * nvl (commission_pct, 0) >10000;
--ATENTIE !!! NULL coronavirus de sql
select 10 +10 * null from dual;
select 10+ null from dual;

--ex 15
 SELECT last_name, job_id, salary,    
 DECODE(job_id, 'it_prog', salary*1.1, 
                'st_clerk', salary *1.15,
                'sa_rep', salary *1.2,
 --else:
 salary) 
 "Salariu renegociat"  FROM employees; 
 
--Sau 
 
SELECT last_name, job_id, salary,   
CASE job_id WHEN 'IT_PROG' THEN salary* 1.1
--fara virgule !
            when 'st_clerk' then salary*1.15
            when 'sa-rep' then salary* 1.2  
ELSE salary    END "Salariu renegociat" FROM employees; 

select * from departments;
select * from employees;
--joinuri
inner join intersectia a 2 tabele

--ex 16 lab 2

 
I. Condiția de Join este scrisă în clauza WHERE a instrucțiunii SELECT  
 
--eroare: select employee_id, department_name from employees e; zice ca nu gaseste numele
select employee_id, department_name from employees e, departments d;--> produs cartezian fiecare elem cu fiecare 
--(noi nu vrem asta vrem doar elementele comune)

select employee_id, department_name from employees e, departments d
 where e.department_id = d.department_id; 
 --de ce afiseaza 106 in loc de 107??
 
 select last_name, employee_id
 from employees
 where department_id is null;--> grant 178 nu are departament 
 -- in employees department_id este cheie externa, deci poate fi null 
 -- de aceea avem un anagajat care nu are departament 
 --exista simbol (+)  care se pune in dreptul coloanei(din conditia de join) unde se afla deficit de informatie 
 
 --vrem sa afisam si angajatii care nu au departament
 
 select employee_id, department_name from employees e, departments d
 where e.department_id = d.department_id (+); 
--vrem sa afisam si departamentele care nu au angajati
 select employee_id, department_name from employees e, departments d
 where e.department_id (+) = d.department_id; 
 
 --ALIAS-ul important 
 --EROARE -ambiguitate
 select employee_id, department_id
 from employees , departments d
 where employees.department_id  = d.department_id; 
 --e bine:
  select employee_id, d.department_id
 from employees , departments d
 where employees.department_id  = d.department_id; 
 
II. Condiția de Join este scrisă în FROM 
 
Utilizăm ON: 
 
select employee_id, department_name  
from employees e join departments d on (e.department_id = d.department_id); 
 
 
Utilizăm USING – atunci când avem coloane cu același nume: (mai rar)

select employee_id,department_name from employees 
e  join departments d using(department_id); 
--examen:
--emp (id#, nume, depid)
--dep(id#, numedep)

--ex 17 lab 2
select job_id, job_title
from jobs where department_id=30;--eroare pt ca nu e in jobs depart_id
 
select j.job_id, job_title -- ca sa nu fie ambiguitate 
from jobs j, employees e 
where department_id=30 and j.job_id=e.job_id ;
--ex 18 lab 2
select last_name, department_name, location_id
from   employees e, departments d
where e.departments_id = d.departments_id and commission_pct is not null;
--ex 19 
select last_name, job_title, department_name
from employees e, jobs j, departments d
where e.job_id=j.job_id and e.department_id=d.department_id;
-- city ='oxford' crapa fara un alt join;
select last_name, job_title, department_name
from employees e, jobs j, departments d, locations l
where e.job_id=j.job_id and 
    e.department_id=d.department_id and
        d.location_id=l.location_id and 
        initcap(l.city)='oxford';

--ex 20 
--seful este si el angajat la randul lui si tot asa
--self join

    SELECT ang.employee_id Ang#, ang.last_name Angajat, 
    sef.employee_id Mgr#, sef.last_name Manager 
    FROM employees ang, employees sef 
    WHERE ang.manager_id = sef.employee_id; 
--ex 21
  SELECT ang.employee_id Ang#, ang.last_name Angajat, 
    sef.employee_id Mgr#, sef.last_name Manager 
    FROM employees ang, employees sef
    WHERE ang.manager_id = sef.employee_id (+); 
--ex 22
    select ang.last_name, ang.department_id, coleg.last_name
    from employees ang, employees coleg
    where ang.department_id= coleg.department_id;
    --dar nu face diferenta il ia pe el cu el insusi
    
    select ang.last_name, ang.department_id, coleg.last_name
    from employees ang, employees coleg
    where ang.department_id= coleg.department_id and
         ang.employee_id < coleg.employee_id;
--ex 24
        select ang.last_name, ang.hire_date, gates.last_name, gates.hire_date
        from employees ang, employees gates
        where ang.hire_date> gates.hire_date
             and initcap(gates.last_name)='Gates';
 --TEMA 23 SI 25 LAB 2 
 
 
